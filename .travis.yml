# Copied from https://github.com/nim-lang/Nim/wiki/TravisCI
language: c

cache: ccache
cache:
  directories:
  - .cache

matrix:
  include:
    # Build and test against the master (stable) and devel branches of Nim
    # Build and test using both gcc and clang
    - os: linux
      env: CHANNEL=stable
      compiler: gcc

    - os: linux
      env: CHANNEL=devel
      compiler: gcc

    # For faster testing we don't test clang on linux, only on macOS
    # - os: linux
    #   env: CHANNEL=stable
    #   compiler: clang
    #
    # - os: linux
    #   env: CHANNEL=devel
    #   compiler: clang

    # On OSX we only test against clang (gcc is mapped to clang by default)
    # Note: for OpenMP, Homebrew will build flame/blis with GCC-5
    - os: osx
      env: CHANNEL=stable BLIS=true
      compiler: clang

    # For faster testing, we only test BLIS = true
    # - os: osx
    #   env: CHANNEL=stable BLIS=false
    #   compiler: clang

  allow_failures:
    # Ignore failures when building against the devel Nim branch
    # Also ignore OSX, due to very long build time and Homebrew/curl SSLRead errors
    - env: CHANNEL=devel
    - os: osx
  fast_finish: true

addons:
  apt:
    packages:
      # On Linux we need OpenBLAS, on OSX Apple Accelerate is present by default
      - libopenblas-dev
      - liblapack-dev

before_install:
  # Build blis from source on osx since bottles are very old/broken on homebrew
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export CORES=$(sysctl -n hw.ncpu);
      git clone https://github.com/flame/blis --depth 1;
      cd blis &&  git fetch --tags && git checkout tags/0.5.1;
      ./configure auto && make -j $CORES ;
      make -j $CORES test && make -j $CORES install;
      cd .. ;
    fi

install:
  - export CHOOSENIM_NO_ANALYTICS=1
  - curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
  - sh init.sh -y
  - export PATH=~/.nimble/bin:$PATH
  - echo "export PATH=~/.nimble/bin:$PATH" >> ~/.profile
  - choosenim $CHANNEL

script:
    - nimble install -y
    - if [[$BLIS]];
        then nimble test_blis;
        else nimble test; nimble test_arc;
        fi

    # TODO:
    # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then nimble test_openmp; fi
    # error: expected ‘#pragma omp’ clause before ‘simd’ #pragma omp parallel for simd
    # https://travis-ci.org/mratsim/Arraymancer/jobs/434653044#L2191

branches:
  except:
    - gh-pages
